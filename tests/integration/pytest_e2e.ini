[tool:pytest]
# Pytest configuration for Starknet E2E tests

# Test discovery
testpaths = .
python_files = test_starknet_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    starknet: Starknet-specific tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    starknet_py: Tests that require starknet-py library
    slow: Tests that take more than 5 seconds
    aws: Tests that use AWS mocks

# Output and reporting
addopts = 
    -ra
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    -v

# Minimum test coverage requirements
minversion = 6.0

# Test execution
timeout = 300
timeout_method = thread

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:starknet_py.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/e2e_tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d - %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution (when pytest-xdist is available)
# addopts = -n auto

# Mock configuration
mock_use_standalone_module = true

# Collection
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Custom test report
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = false